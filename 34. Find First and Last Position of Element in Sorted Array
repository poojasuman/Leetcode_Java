class Solution {
    public int[] searchRange(int[] nums, int target) {
        
        if (nums.length == 0)
            return new int[] {-1,-1};
        else if (nums.length == 1)
            return (nums[0]== target? new int[] {0,0} : new int[] {-1,-1});
        else
            return searchIndex(nums, target, 0, nums.length-1);
    }
    
    public int[] searchIndex(int[] nums, int target, int start, int end)
    {
        if (start<=end)
        {
            int mid = (start +end)/2;
            if (nums[mid] < target)
                return searchIndex(nums, target, mid+1, end);
            else if (nums[mid] > target)
                return searchIndex(nums, target, start, mid-1);
            else if (nums[mid] == target)
            {
                int i=mid, j=mid;
                while (i>0)
                {
                    if (nums[i-1] == target)
                        i--;
                    else
                        break;
                }
                while (j<nums.length-1)
                {
                    if (nums[j+1] == target)
                        j++;
                    else
                        break;
                }
                return new int[] {i,j};
            }
        }
        return new int[] {-1,-1};
    }
}
